"""Footystats is a Tensorflow soccer match score and win/loss prediction for several teams."""

import numpy as np  
import tensorflow as tf
from tensorflow import keras

database_file = "database.sqlite"

# Define SQL query
query = """
SELECT 
    team.team_api_id, 
    team.team_long_name, 
    match.home_team_goal, 
    match.away_team_goal 
FROM 
    match 
JOIN 
    team ON match.home_team_api_id = team.team_api_id
"""

# Load dataset
dataset = tf.data.experimental.SqlDataset("sqlite", database_file, query, 
    (tf.int32, tf.string, tf.float64, tf.float64))

# Split dataset into features (X) and labels (y)
X = []
y = []
for team_api_id, team_long_name, home_team_goal, away_team_goal in dataset:
    X.append([team_api_id.numpy()])
    y.append([home_team_goal.numpy(), away_team_goal.numpy()])

# Convert X and y to numpy arrays
X = np.array(X)
y = np.array(y)

# Define a simple model
model = keras.Sequential([
    keras.layers.Dense(64, activation='relu', input_shape=[1]),
    keras.layers.Dense(64, activation='relu'),
    keras.layers.Dense(2)  # Changed to 2 because we have 2 labels
])

# Compile the model
model.compile(loss='mean_squared_error',
    optimizer=tf.keras.optimizers.Adam(0.001))

# Train the model
model.fit(X, y, epochs=10)

# Let's say we have a team with team_api_id = 60
team_data = np.array([[60]])

# Use the model to predict the number of goals
predicted_goals = model.predict(team_data)

print("Predicted home team goals: ", predicted_goals[0][0])
print("Predicted away team goals: ", predicted_goals[0][1])



# /Users/aidandyga/Downloads/PersonalProjects/footystats/main.py
#  home_team_goal, away_team_goal, team_api_id, team_long_name FROM match, team
# THAT IS THE IMPORTANT DATA